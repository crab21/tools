apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    executionID: executionID
    pipelineID: pipelineID
    runID: run-executionid-0
    info: "true"
  name: run-executionid-1627714319-expr-both
spec:
  serviceAccountName: default 
  pipelineSpec:
    params:
      - name: path
        type: string
        description: The path of the file to be created
    tasks:
    - name: aa
      taskSpec:
        results:
          - name: task1-output1
        steps:
        - name: stgstep01
          image: zshusers/zsh:4.3.15
          script: |
            #!/usr/bin/env zsh
            
            mkdir -p /tekton/source 
            echo "goods" > /tekton/source/go.txt
            printf yes | tee $(results.task1-output1.path)
          workingDir: /tekton
        workspaces:
        - mountPath: /tekton
          name: shared-workspace
      workspaces:
      - name: shared-workspace
        workspace: shared-workspace
    
    - name: activatestageid2
      runAfter: ["aa"]
      taskSpec:
        steps:
        - name: stgstep02
          image: zshusers/zsh:4.3.15
          script: |
            #!/usr/bin/env zsh
            echo test
            # ff=$(cat /tekton/source/go.txt)
            # if [ "$ff" == "good" ]
            # then 
            #   echo "good"
            #   # exit 0
            # else
            #   echo "not good"
            #   # exit 0
            # fi
            echo $(tasks.aa.results.task1-output1)
          workingDir: /tekton
        workspaces:
        - mountPath: /tekton
          name: shared-workspace
      workspaces:
      - name: shared-workspace
        workspace: shared-workspace
    - name: activatestageid3
      when:
        - input: "$(tasks.aa.results.task1-output1)"
          operator: in
          values: ["yes"]
      runAfter: ["aa"]
      taskSpec:
        steps:
        - name: stgstep02
          image: zshusers/zsh:4.3.15
          workingDir: /tekton
        workspaces:
        - mountPath: /tekton
          name: shared-workspace
      workspaces:
      - name: shared-workspace
        workspace: shared-workspace
    workspaces:
    - name: shared-workspace
  params:
    - name: path
      value: metadata.name
  # workspaces:
  # - name: shared-workspace
  #   volumeClaimTemplate:
  #     spec:
  #       accessModes:
  #         - ReadWriteMany
  #       resources:
  #         requests:
  #           storage: 10Gi    
  workspaces:
  - name: shared-workspace
    persistentVolumeClaim:
      claimName: mmpvc
